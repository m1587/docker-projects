apiVersion: apps/v1
kind: Deployment
metadata:
  name: result-deployment
  namespace: {{ .Values.namespace }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: result
  template:
    metadata:
      labels:
        app: result
    spec:
      initContainers:
        - name: wait-for-db
          image: {{ .Values.image.postgres.repository }}:{{ .Values.image.postgres.tag }}
          command:
            - sh
            - -c
            - |
              until pg_isready -h $DB_HOST -U $DB_USER; do
                echo "Waiting for database to be ready..."
                sleep 2
              done
          env:
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: voting-app-config
                  key: DB_HOST
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: voting-app-secret
                  key: DB_USER
      containers:
        - name: result-container
          image: {{ .Values.image.result.repository }}:{{ .Values.image.result.tag }}
          ports:
            - containerPort: 80
          env:
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: voting-app-config
                  key: DB_HOST
            - name: DB_PORT
              valueFrom:
                configMapKeyRef:
                  name: voting-app-config
                  key: DB_PORT
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: voting-app-config
                  key: DB_NAME
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: voting-app-secret
                  key: DB_USER
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: voting-app-secret
                  key: DB_PASSWORD
